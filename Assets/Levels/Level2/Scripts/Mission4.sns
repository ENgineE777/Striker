namespace Level2
{
    class Mission4 : Mission
    {
        //1
        MeshInstance helipad;
        array<Marker> path_to_building;

        //2
        MeshInstance boss_car;
        array<Marker> path_to_battle;

        //3
        Marker boss_spawn;
        EnemyPool@ boss;

        MoverAlongPath copilot_mover;
        MoverAlongPath boss_mover;

        void OnInit()
        {
            main.RegisterMission(this);

            for (int i = 0; i<main.enemy_pools.get_length();i++)
            {
                auto@ pool = main.enemy_pools[i];

                if (pool.enemy_name == "M4_BossBody")
                {
                    @boss = @pool;
                    continue;
                }
            }

            curObjective = 0;
        }

        bool IsCompleted()
        {
            return curObjective == 5;
        }

        void Update(float dt) override
        {
            if (curObjective == 0)
            {
                ShowObjective("M4: Land");

                auto pos = helipad.mesh.GetTransform().GetPos();
                ShowMarker(pos, 0);

                main.CheckIfCanLand(pos, dt);

                if (main.CheckIfLanded(pos))
                {
                    curObjective++;

                    main.copilot.visible = 1;
                    main.copilot.mesh.SetTransform(path_to_building[0].transform);

                    copilot_mover.Prepare(path_to_building, true);
                }
            }
            else
            if (curObjective == 1)
            {
                ShowObjective("M4: Land");

                if (copilot_mover.Move(dt * 12))
                {
                    main.copilot.visible = 0;

                    curObjective++;

                    int index = path_to_building.get_length() - 1;

                    main.copilot.visible = 1;
                    main.copilot.mesh.SetTransform(path_to_building[index].transform);

                    copilot_mover.Prepare(path_to_building, false);
                }
                else
                {
                    Matrix mat;
                    mat.SetPos(copilot_mover.pos);
                    main.copilot.mesh.SetTransform(mat);
                }
            }
            else
            if (curObjective == 2)
            {
                ShowObjective("M4: Land");

                if (copilot_mover.Move(dt * 12))
                {
                    main.copilot.visible = 0;

                    curObjective++;
                    main.TakeOff();

                    copilot_mover.Prepare(path_to_battle, true);

                    boss_mover.Prepare(path_to_battle, true);
                    boss_mover.Move(45.0f);

                    main.follow_mode = true;
                }
                else
                {
                    Matrix mat;
                    mat.SetPos(copilot_mover.pos);
                    main.copilot.mesh.SetTransform(mat);
                }
            }
            else
            if (curObjective == 3)
            {
                ShowObjective("M4: Catch boss");

                if (boss_mover.Move(dt * 1.5f * 12))
                {
                    curObjective++;

                    boss.SpawnEnemy(boss_spawn.transform.GetPos());
                }
                else
                {
                    copilot_mover.Move(dt * 1.5f * 12);

                    auto pos = boss_mover.pos;

                    float target_angle = atan2(boss_mover.segemnt_dir.x, boss_mover.segemnt_dir.z);

                    Matrix rotation;
                    rotation.RotateY(target_angle);
                    rotation.SetPos(pos);

                    boss_car.mesh.SetTransform(rotation);

                    Vector3 offset = pos - copilot_mover.pos;
                    offset.Normalize();

                    main.follow_mode_camera_from = Vector3(copilot_mover.pos.x - offset.x * 25.0f, main.heli_height + main.camera_dist_vert, copilot_mover.pos.z - offset.z * 25.0f);
                    main.follow_mode_camera_to = Vector3(copilot_mover.pos.x + offset.x * 25.0f, 0.0f, copilot_mover.pos.z + offset.z * 25.0f);

                    main.heli_pos.x = copilot_mover.pos.x;
                    main.heli_pos.y = main.heli_height;
                    main.heli_pos.z = copilot_mover.pos.z;
                }
            }
            else
            if (curObjective == 4)
            {
                ShowObjective("M4: Defeat boss");

                if (CheckEnemies(boss) == 0)
                {
                    curObjective++;
                }
            }
        }
    }
}