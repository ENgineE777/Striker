
#import "EnemyPool"

class Marker
{
    Matrix transform;
    float radius;
}

class MeshInstance
{
    Mesh@ mesh;
    Phys3D@ phys;
    int visible = 1;
}

class Mission
{
    int curObjective;
    bool isCurrent;

    bool IsCompleted()
    {
        return false;
    }

    void SetAsCurrent(bool set)
    {
        isCurrent = set;
    }

    int CheckEnemies(EnemyPool@ pool)
    {
        int count = 0;

        for (int i = 0; i < pool.enemies.get_length(); i++)
        {
            if (pool.enemies[i].hp > 0)
            {
                Matrix mat = pool.enemies[i].mesh.GetTransform();
                ShowMarker(mat.GetPos(), i);

                count++;
            }
        }

        return count;
    }

    void ShowMarker(Vector3&in pos, int index)
    {
        if (!isCurrent)
        {
            return;
        }

        Vector3 res;
        core.render.TransformToScreen(pos, res, Vector2(35.0f), Vector2(45.0f));
        float scale = core.render.GetHeight() / 1024.0f;

        core.render.DebugText(res.x * scale, res.y * scale, "X" + index);
    }

    void ShowObjective(string&in text)
    {
        if (!isCurrent)
        {
            return;
        }

        core.render.DebugText(30, 5, text);
    }

    void Update(float dt)
    {

    }

    void DrawObjective(float dt)
    {

    }
}