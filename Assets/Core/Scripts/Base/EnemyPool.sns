
enum EnemyState
{
    Idle,
    Pursuit,
    Strafing
}

class Enemy
{
    int hp = 5;
    int visible = 1;
    float aim_angle = 0.0f;
    float rotor_angle = 0.0f;
    float shoot_cooldown = 0.0f;
    int shoot_side = 0;
    EnemyState state = Idle;
    float state_time = 0.0f;
    int state_param = 0;
    Vector3 shot_point;

    int shot_count = 0;
    float wait_time = 0.0f;

    Mesh@ mesh;
    Phys3D@ phys;
}

class EnemyPool
{
    array<Enemy> enemies;
    array<Enemy> enemies_frac;
    string enemy_name;
    string enemy_frac_name;
    string exp_particle_name;

    Main@ main;

    void OnInit()
    {
        enemies_frac.resize(enemies.get_length());

        for (int i = 0; i < enemies.get_length(); i++)
        {
            enemies_frac[i].visible = 0;
        }
    }

    bool AutoTargedAllowed()
    {
        return true;
    }

    void SpawnEnemy(Vector3&in pos)
    {
        int index = enemies.get_length();
        enemies.resize(index + 1);
        enemies_frac.resize(index + 1);

        Matrix mat;
        mat.SetPos(pos);
        enemies[index].phys.SetTransform(mat);

        enemies_frac[index].visible = 0;
        enemies_frac[index].phys.SetTransform(mat);
    }

    void HideEnemy(int object_index)
    {
        enemies[object_index].visible = 0;
    }

    bool CheckHit(Vector3&in hit, int damage, string&in object_name, int object_index)
    {
        if (object_name == enemy_name)
        {
            enemies[object_index].hp -= damage;

            if (enemies[object_index].hp <= 0)
            {
                auto mat = enemies[object_index].mesh.GetTransform();
                enemies_frac[object_index].phys.SetTransform(mat);

                HideEnemy(object_index);

                enemies_frac[object_index].visible = 1;
                enemies_frac[object_index].phys.AddExplosionForce(hit, 12.0f, 8.0f);
                enemies_frac[object_index].phys.AddExplosionForce(mat.GetPos(), 12.0f, 5.0f);

                if (exp_particle_name.get_length() > 0)
                {
                    core.scene.PlayParticles("Core", exp_particle_name, mat.GetPos());
                }
            }

            return true;
        }
        else
        if (object_name == enemy_frac_name)
        {
            enemies_frac[object_index].phys.AddExplosionForce(hit, 12.0f, 5.0f);

            return true;
        }

        return false;
    }

    void Update(float dt)
    {

    }
}