class Bullets : ProjectilePool
{
    void OnInit()
    {
        main.RegisterProjectilePool(this);
    }

    void Update(float dt) override
    {
        Matrix mat;
        Vector3 hit, normal;
        string object_name;
        int object_index;

        for (int i =  0; i < projectiles.get_length(); i++)
        {
            auto@ bullet = @projectiles[i];

            bullet.time_life += dt;

            if (bullet.time_life > 2.0f || core.scene.Raycast3D(bullet.pos, bullet.dir, dt * speed, bullet.phys_group, hit, normal, object_name, object_index))
            {
                if (object_index != bullet.shoter_index || object_name != bullet.shoter_name)
                {
                    Vector3 dir = bullet.dir;
                    dir.y = 0.0f;
                    dir.Normalize();

                    main.HitObject(hit - dir * 3.0f, damage, object_name, object_index);

                    core.scene.PlayParticles("Core", "hit1", hit);

                    projectiles.removeAt(i);
                    i--;

                    continue;
                }
            }

            bullet.pos += bullet.dir * dt * speed;

            mat = bullet.mesh.GetTransform();
            mat.SetPos(bullet.pos);
            bullet.mesh.SetTransform(mat);
        }
    }
}