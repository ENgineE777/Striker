#import "main"

class AATank : EnemyPool
{
    Main@ main;
    array<Enemy> enemies_tower;

    void OnInit() override 
    {
        main.RegisterEnemyPool(this);
        EnemyPool::OnInit();

        enemies_tower.resize(enemies.get_length());

        for (int i = 0; i < enemies.get_length(); i++)
        {
            Matrix mat = enemies[i].mesh.GetLocatorTransform("loc_tower");
            enemies_tower[i].mesh.SetTransform(mat);
        }
    }

    void HideEnemy(int object_index) override
    {
        enemies[object_index].visible = 0;
        enemies_tower[object_index].visible = 0;
    }

    void Update(float dt) override
    {
        for (int i = 0; i < enemies.get_length(); i++)
        {
            auto@ enemy = enemies[i];

            if (enemy.hp <= 0)
            {
                continue;
            }

            Matrix mat = enemy.mesh.GetLocatorTransform("loc_tower");

            auto dir = mat.GetPos() - main.heli_pos;
            dir.y = 0.0f;

            if (dir.Length() < 40.0f)
            {
                enemy.aim_angle = core.utils.AdvanceAngle(enemy.aim_angle, -atan2(dir.z, dir.x) - 0.01745329f * 90.0f, 0.055f);
            }

            Matrix rotation;
            rotation.RotateY(enemy.aim_angle);
            rotation.SetPos(mat.GetPos());

            enemies_tower[i].mesh.SetTransform(rotation);
        }
    }
}